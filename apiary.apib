FORMAT: 1A

# Superdesk

## Authentication Token [/Security/Authentication]

Before authentication, you will need to get token:

### Get token [POST]

+ Request (application/json)

        {
            "userName": "admin"
        }

+ Response 200

        {
            "Token": "93d9f8d01cf5e08e2b238c353582aac0394530a310d17fc4459974aa44267c09c4b6bac1fd02c1aeb41ac94b3a024ae8a03cc72b6045c1d3d00dbeb0b2f51a70"
        }

## Login [/Security/Authentication/Login]

With token from previous step:

### Authenticate [POST]

+ Request (application/json)

        {
            "Token": "93d9f8d01cf5e08e2b238c353582aac0394530a310d17fc4459974aa44267c09c4b6bac1fd02c1aeb41ac94b3a024ae8a03cc72b6045c1d3d00dbeb0b2f51a70",
            "HashedToken": "..."
        }

+ Response 200

        {
            "Session": "616edf0ad1ba6f883ca5f6b0c93218b5aa5b0fe247528ce6be0844e499af6595e72e053d4f38aed6e3fc30fedde320cad7bbbb43aade0b301e820bcf489b80b7",
            "User": {
                "Id": "1",
                "Name": "admin",
                "href": "/resources/HR/User/1"
            }
        }

## Authentication Resource [/auth]

An *oldschool* authentication.

### Authenticate [POST]

Get token using your credentials.

+ Request (application/json)

        {
            "username": "admin",
            "password": "admin"
        }

+ Response 200

        {
            "token": "token",
            "status": "OK",
            "user": "5292de6f6224ff00026fa835"
        }

## Users Collection [/users{?max_results,where,sort,q,df}]

+ Headers

        Authorization: Basic dG9rZW46

### List all Users [GET]

+ Parameters
    + max_results = `25`(optional, integer)...Number of users to be returned
    + where (optional, object, `{"last_name": "Bar"}`)...Filter
    + sort (optional, object, `[{"email": 1}]`)...Sort
    + q (optional, string, `foo`)...Search query
    + df (optional, string, `display_name`)...Search default field

+ Response 200 (application/json)

        {
            "_items": [
                {
                    "_id": "5292de6f6224ff00026fa835",
                    "_links": {"self": {"href": "/users/5292de6f6224ff00026fa835"}},
                    "created": "2013-11-25T05:21:51+0000",
                    "display_name": "Foo",
                    "email": "foo.bar@example.org",
                    "etag": "ba5a2c20e593dc507c845d5d074ba0ab0fbee077",
                    "first_name": "Foo",
                    "last_name": "Bar",
                    "picture_url": "/upload/qQTYkyNDm7we.png",
                    "updated": "2013-11-25T05:24:14+0000",
                    "user_info": {"company": "Example"},
                    "username": "foo"
                },
                {
                    "_id": "52aec775f3d428000a0dcca6",
                    "_links": {"self": {"href": "/users/52aec775f3d428000a0dcca6"}},
                    "created": "2013-12-16T09:27:17+0000",
                    "display_name": "serena",
                    "etag": "e6455c43ded12f0cb000a3e3ceac261b82d42805",
                    "first_name": "Serrena",
                    "last_name": "Cocosta",
                    "picture_url": "/upload/IvkXZsIa4m8H.jpg",
                    "updated": "2013-12-16T09:27:17+0000",
                    "username": "serr"
                }
            ],
            "_links": {"self": {"href": "/users"}}
        }

### Create a User [POST]
+ Request (application/json)

        {
            "first_name": "John",
            "last_name": "Doe",
            "username": "john",
            "password": "pass",
        }

+ Response 201 (application/json)

        {
            "_id": "526151304f2b5b000299cc41",
            "_links": {"self": {"href": "/users/526151304f2b5b000299cc41"}},
            "created": "2013-10-18T15:18:08+0000",
            "display_name": "John Doe",
            "etag": "929c5f14fce59f019cb6948c66956ae06056ea45",
            "updated": "2013-10-18T15:18:08+0000",
            "username": "john"
        }

## User [/users/{_id}]
A single User object

+ Headers

        Authorization: Basic dG9rZW46

+ Parameters
    + _id (required, string, `5292de6f6224ff00026fa835`) ... User `_id`.

### Retrieve a User [GET]

+ Response 200 (application/json)

        {
            "_id": "5292de6f6224ff00026fa835",
            "_links": {"self": {"href": "/users/5292de6f6224ff00026fa835"}},
            "created": "2013-11-25T05:21:51+0000",
            "display_name": "Foo",
            "email": "foo.bar@example.org",
            "etag": "ba5a2c20e593dc507c845d5d074ba0ab0fbee077",
            "first_name": "Foo",
            "last_name": "Bar",
            "picture_url": "/upload/qQTYkyNDm7we.png",
            "updated": "2013-11-25T05:24:14+0000",
            "user_info": {"company": "Example"},
            "username": "foo"
        }

### Remove a User [DELETE]
+ Response 204

## User Role collection [/user_roles]

+ Headers

        Authorization: Basic dG9rZW46

### List user roles [GET]

+ Response 200 (application/json)

        {"_items": []}
